openapi: 3.0.0

info:
  title: Checklists management API
  version: 0.0.1

servers: 
  - url: http://localhost:8080/api/v1
    description: Local development server   

paths:
  /health:
    get: 
      summary: Get api info
      operationId: getHealthInfo
      responses:
        200: 
          description: api health info
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHealthInfo'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'        

  /user:
    post:
      summary: Create the new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201: 
          description: user created
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        422:                
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'        

  /user/login:
    post:
      summary: Logs user into the system
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - username
                - password
              properties:
                username:
                  description: The user name for login
                  type: string
                password:
                  description: The password for login in clear text
                  type: string  
      responses:
        201: 
          description: user was successfuly logger in
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400: 
          description: invalid username/password combination
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'        

  /user/logout:
    get:
      summary: Logs out current logged in user
      operationId: logoutUser
      responses:
        204: 
          description: user was logged out
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'        

  /user/{id}:
    get:
      summary: Get user by user name
      operationId: getUserByName
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema: 
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'       
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'                       
    patch:
      summary: Update user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema: 
            type: string
      requestBody:    
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      responses:
        201: 
          description: user was updated
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        422:                
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'        
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'          
    delete:
      summary: Delete user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema: 
            type: string
      responses:
        204:
          description: successful operation
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'       
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'        
  
  /checklists:
    get:
      summary: Get all checklists
      operationId: getChecklists
      responses:
        '200':
          description: collection of checklists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecklistsCollection'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    post:
      summary: Create new checklist
      operationId: createChecklist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Checklist'
      responses:
        '201':
          description: The new checklist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecklistsCollection'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
                
  /checklists/{id}:
    get:
      summary: Get checklist by id
      operationId: getChecklist
      parameters: 
        - in: path
          name: id
          required: true
          schema: 
            type: integer
            minimum: 1
          description: checklist id
      responses:
        '200':
          description: checklists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checklist'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'             
    delete:
      summary: Delete checklist
      operationId: deleteChecklist
      parameters: 
        - in: path
          name: id
          required: true
          schema: 
            type: integer
            minimum: 1
          description: checklist id
      responses:
        '204':
          description: checklists
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'                
    patch:
      summary: Update checklist
      operationId: patchChecklist
      parameters: 
        - in: path
          name: id
          required: true
          schema: 
            type: integer
            minimum: 1
          description: checklist id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Checklist'
      responses:
        '201':
          description: The new checklist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checklist'    
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'                
            
  
components:
  schemas:
    ApiHealthInfo:
      type: object
      properties:
        version:
          type: string
    
    Checklist:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string  
        description:
          type: string    
        items:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ChecklistItem'
              - $ref: '#/components/schemas/ChecklistItemsGroup'
          
    ChecklistItem:
      type: object
      properties: 
        id:
          type: string
        name:
          type: string
        order:
          type: integer
        done: 
          type: boolean

    ChecklistItemsGroup:
      type: object
      properties: 
        id:
          type: string
        name:
          type: string
        order:
          type: integer
        done: 
          type: boolean
        items:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ChecklistItem'
              - $ref: '#/components/schemas/ChecklistItemsGroup'  

    ChecklistsCollection:
      type: object
      properties:
        itemsCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Checklist'
      
    ErrorModel:
      type: object
      properties:
        message:
          type: string

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status      
